name: 🚀 CI & CD.
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
jobs:
  code-quality:
    name: "🔆 Code Quality"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - name: 🔽 Descargar proyecto
        uses: actions/checkout@v2
        with:
          persist-credential: false

      - name: 🏠 Instalar Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: 👷‍♂️ Instalar dependencias
        run: |
          npm i
      - name: 🔅 Sintaxis estándar prettier
        run: |
          echo "Recuerda tener instalado Prettier como formateador de código en tu Editor de texto"
          echo "Este código usará como estándar la indentación de Prettier."
          echo "Para solucionar tu indentación, ejecuta npm run sintax:fix"
          npm run sintax:test
      - name: 👀 Estándares del proyecto
        run: |
          npm test
      - name: 👀 Calidad del código
        run: |
          echo "Se revisará la calidad del código para que la consola no tenga warnings ni errores."
          echo "Se validará que no existan variables sin usar, console.logs, malos estándares de código, etc."
          npm run lint

  docker-push:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    name: "📦 Docker build & push"
    needs: code-quality
    runs-on: ubuntu-latest
    steps:
      - name: 👷‍♂️ Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: 👷‍♂️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: 🔍 Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      #- name: 🏷 Get the version
      #  id: get_version
      #  run: |
      #    echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: ☁ Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: rmaafs/rmaafs-api:last-development
          #tags: rmaafs/rmaafs-api:${{ steps.get_version.outputs.VERSION }}
